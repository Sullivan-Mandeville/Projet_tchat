@model Tchat.Core.Models.User

@{
    ViewBag.Title = "Create";
}




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="page login-page">
        <div class="container">
            <div class="form-outer text-center d-flex align-items-center">
                <div class="form-inner">
                    <div class="logo text-uppercase"><span>S'</span><strong class="text-primary">inscrire</strong></div>
                    <p>Ici vous pouvez vous inscire à Talks,partagez, communiquez et amusez-vous !</p>
                    <form class="text-left form-validate">
                        <div class="form-group-material">


                            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "input-material", required = "Entrez votre nom", id = "register-name" } })
                            <label for="register-name" class="label-material">Nom</label>
                            @Html.ValidationMessageFor(model => model.name, "", new { @class = "valid-feedback" })

                        </div>
                        <div class="form-group-material">


                            @Html.EditorFor(model => model.firstname, new { htmlAttributes = new { @class = "input-material", required = "Entrez votre prénom", id = "register-firstname" } })
                            <label for="register-firstname" class="label-material">Prénom</label>
                            @Html.ValidationMessageFor(model => model.firstname, "", new { @class = "valid-feedback" })

                        </div>
                        <div class="form-group-material">


                            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @type = "email", @class = "input-material", id = "register-email", aria_describedby = "inputGroupPrepend3", required = "Entrez votre email" } })
                            <label for="register-email" class="label-material">Adresse Mail</label>
                            @Html.ValidationMessageFor(model => model.email, "", new { @class = "invalid-feedback" })

                        </div>

                        <div class="form-group-material">

                            @Html.EditorFor(model => model.password, new { htmlAttributes = new { @type = "password", @class = "input-material", aria_describedby = "passwordHelpBlock", required = "Entrez votre mot de passe", id = "register-password" } })
                            <label for="register-password" class="label-material">Mot de passe</label>
                            @Html.ValidationMessageFor(model => model.password, "", new { @class = "valid-feedback" })
                        </div>
                        @Html.HiddenFor(model => model.date_create, new { @Value = System.DateTime.Now.ToString() })
                        @Html.HiddenFor(model => model.modification_date, new { @Value = System.DateTime.Now.ToString() })
                        <div class="form-group terms-conditions text-center">
                            <input id="register-agree" name="registerAgree" type="checkbox" required value="1" data-msg="Your agreement is required" class="form-control-custom">
                            <label for="register-agree">J'accepte les termes et conditions</label>
                        </div>
                        <div class="form-group text-center">
                            <input type="submit" value="S'enregistrer" class="btn btn-primary">
                        </div>
                    </form><small>Avez vous un compte? </small>@Html.ActionLink("Se connecter", "Index", "Login")
                </div>
             
            </div>
        </div>
    </div>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
