@model Tchat.Core.Models.Private_message

@{
    ViewBag.Title = "Create";

}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Private_message</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.content, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.content, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => model.date_message, new { @Value = System.DateTime.Now.ToString() })

        @Html.HiddenFor(model => model.id_sender, htmlAttributes: new { @Value = Session["ID"] })


        <div class="form-group">
            @Html.LabelFor(model => model.id_recepient, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.id_recepient, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.id_recepient, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@{ 
    var md = new MarkdownDeep.Markdown();


    // Set options
    md.ExtraMode = true;
    md.SafeMode = false;

    string output = md.Transform(input);


}



<div class="mdd_toolbar"></div>
<textarea cols=50 rows=10 class="mdd_editor"></textarea>
<div class="mdd_resizer"></div>
<div class="mdd_preview"></div>



<div>
    @Html.ActionLink("Back to List", "Index")
</div>
